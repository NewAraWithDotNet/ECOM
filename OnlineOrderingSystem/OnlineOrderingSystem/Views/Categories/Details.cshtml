@model OnlineOrderingSystem.Models.Category
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    var afToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}
@{
    Layout = null;
}
<h2>@Model.Name</h2>

@if (Model.Products != null && Model.Products.Any())
{
    <div class="row">
        @foreach (var product in Model.Products)
        {
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-body">
                        <div class="col-lg-12">
                            @if (!string.IsNullOrEmpty(product.Image))
                            {
                                <img src="~/images/@product.Image" class="card-img-top" alt="@product.Name" />
                            }
                            <div class="col-lg-12">
                                <h5 class="card-title">@product.Name</h5>
                                <p class="card-text"><strong>Price:</strong> @product.Price.ToString("C")</p>
                                <p class="card-text"><strong>Category:</strong> @product.Category.Name</p>
                                <div class="row">
                                    <a asp-controller="Products" asp-action="Details" asp-route-id="@product.Id" class="col-md-4  btn btn-warning">View</a>
                                    <a asp-controller="Products" asp-action="Edit" asp-route-id="@product.Id" class="col-md-4 btn btn-info">Edit</a>
                                    <button type="button" onclick="addToCart(@product.Id)" class="col-md-4 btn btn-success">Add</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No products available for this category.</p>
}

<script>
    function addToCart(productId) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("AddToCart", "Carts")',
            data: {
                id: productId,
                __RequestVerificationToken: '@afToken'
            },
            success: function (response) {
                if (response.success) {
                    updateCart(response.cart);
                    toastr.success("Product added to cart.");
                } else {
                    toastr.error(response.message);
                }
            },
            error: function () {
                toastr.error("An error occurred while adding the product to the cart.");
            }
        });
    }

    function updateCart(cartViewModel) {
        $('#cart-container').empty();
        var cartHtml = '<h2>Shopping Cart</h2>';
        cartHtml += '<div class="list-container">';
        cartViewModel.cartItems.forEach(function (item) {
            cartHtml += '<div class="item-container">';
            cartHtml += '</div>';
        });
        cartHtml += '</div>';
        $('#cart-container').html(cartHtml);
    }
</script>
