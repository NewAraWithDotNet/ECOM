@model OnlineOrderingSystem.Models.Category
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    var afToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}
@{
    Layout = null;
}

@if (Model.Products != null && Model.Products.Any())
{
    <div class="productLists">
        @foreach (var product in Model.Products)
        {
            <div class="product-cards">
                <div class="card product-item border-0 mb-4 w-100">
                    <div class="product-image-container">
                        <img class="product-image" src="~/images/@product.Image" alt="@product.Name">
                        <div class="footerend">
                            <a href="@Url.Action("DetailsProducts", "Products", new { id = product.Id })" class="btn btn-sm text-dark p-0">
                                <span class="icon-wrapper">
                                    <i class="fas fa-eye"></i>
                                </span>
                            </a>
                            @{
                                var userWishlists = ViewBag.UserWishlists as List<Wishlist>;
                                bool isInWishlist = userWishlists != null && userWishlists.Any(w => w.ProductId == product.Id);
                                string iconClass = isInWishlist ? "fa fa-heart text-danger" : "fa fa-heart";
                            }

                            <button id="btnWishlist_@product.Id" class="btn btn-sm text-dark p-0" onclick="toggleWishlist(@product.Id)">
                                <span class="icon-wrapper">
                                <i id="iconWishlist_@product.Id" class="@iconClass"></i>
                                </span>
                            </button>

                            <button type="button" onclick="AddToCart(@product.Id)" class="btn btn-sm text-dark p-0">
                                <span class="icon-wrapper">
                                <i class="fa fa-cart-arrow-down" aria-hidden="true"></i>
                                </span>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="product-Name">
                            <h6 class="text-truncate mb-3">@product.Name</h6>
                        </div>
                        <div class="product-price">
                            <div class="price">
                                <h6><p class="card-text"><strong>Price:</strong> <span id="price-@product.Id">@product.Price.ToString("C")</span></p></h6>
                                <h6><p class="card-text">@product.HowMany pice</p></h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No products available for this category.</p>
}





<script>

    function updatePrice(productId, optionPrice) {
        var priceElement = document.getElementById('price-' + productId);
        priceElement.textContent = optionPrice.toFixed(2);
    }

    function AddToCart(productId) {
        var selectedOption = document.querySelector('input[name="option-' + productId + '"]:checked');
        var optionId = selectedOption ? selectedOption.getAttribute('data-option-id') : null;
        var optionPrice = selectedOption ? parseFloat(selectedOption.value) : null;

        $.ajax({
            url: '@Url.Action("AddToCart", "Carts")',
            type: 'POST',
            data: {
                productId: productId,
                optionId: optionId,
                optionPrice: optionPrice
            },
            success: function (response) {
                if (response.success) {
                    toastr.success(response.message);
                } else {
                    toastr.error(response.message);
                }
            },
            error: function (error) {
                toastr.error('Failed to add product to cart', error);
            }
        });
    }

    function toggleWishlist(productId) {
        var btn = $('#btnWishlist_' + productId);
        var icon = $('#iconWishlist_' + productId);

        $.ajax({
            type: "POST",
            url: '@Url.Action("ToggleWishlist", "Wishlists")',
            data: { productId: productId },
            success: function (response) {
                if (response.success) {
                    if (response.isAdded) {
                        icon.removeClass('fa fa-heart').addClass('fa fa-heart text-danger');
                        toastr.success(response.message);
                    } else {
                        icon.removeClass('bi-calendar-heart-fill text-danger').addClass('bi-calendar-heart');
                        toastr.success(response.message);
                    }
                } else {
                    toastr.error(response.message);
                }
            },
            error: function () {
                toastr.error("An error occurred while toggling the product in the wishlist.");
            }
        });
    }
</script>




<style>
    .btn-wishlist-added {
        background-color: #ffc107 !important;
        color: #212529 !important;
    } 
    .productLists{
        display:flex;
        flex-direction:row;
        gap:20px;
    }
</style>
<style>
    .product-list {
        display: flex;
        gap: 2rem;
        justify-content: center;
    }

    .product-cards {
        display: flex;
        flex-direction: row;
        gap: 1rem;
        border: 2px solid rgba(228, 228, 288, 0.9);
        border-radius: 15px;
        width: 250px;
        height: 300px;
    
    }

       
    .product-image-container {
        position: relative;
        width: 100%;
        height: 20rem;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .product-image {
        padding: 20px;
        max-width: 100%;
        max-height: 100%;
        object-fit: cover;
        border-radius: 0.5rem;
        transition: opacity 0.5s ease, transform 0.5s ease;
    }

        .product-image:hover {
            transform: scale(1.1);
        }

    .footerend {
        position: absolute;
        bottom: 10px;
        left: 50%;
        transform: translateX(-50%);
        opacity: 0;
        transition: opacity 0.5s ease;
    }

    .product-image-container:hover .footerend {
        opacity: 1;
    }

    .product-details {
        display: flex;
        justify-content: space-between;
    }

    .card-body {
        display: flex;
        gap: 10px;
        flex-direction: column;
    }

    .icon-wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: white;
        color: gray;
        border-radius: 4px;
        padding: 5px;
        border: 2px solid rgba(228, 228, 288);
    }

        .icon-wrapper i {
            color: gray;
            margin-right: 5px;
        }

    .price {
        display: flex;
        justify-content: space-between;
    }
</style>