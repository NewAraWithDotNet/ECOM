@model WishlistViewModel
@{
    Layout = null;
}




<script>

    function updatePrice(productId, optionPrice) {
        var priceElement = document.getElementById('price-' + productId);
        priceElement.textContent = optionPrice.toFixed(2);
    }

    function AddToCart(productId) {
        var selectedOption = document.querySelector('input[name="option-' + productId + '"]:checked');
        var optionId = selectedOption ? selectedOption.getAttribute('data-option-id') : null;
        var optionPrice = selectedOption ? parseFloat(selectedOption.value) : null;

        $.ajax({
            url: '@Url.Action("AddToCart", "Carts")',
            type: 'POST',
            data: {
                productId: productId,
                optionId: optionId,
                optionPrice: optionPrice
            },
            success: function (response) {
                if (response.success) {
                    toastr.success(response.message);
                } else {
                    toastr.error(response.message);
                }
            },
            error: function (error) {
                toastr.error('Failed to add product to cart', error);
            }
        });
    }

    function toggleWishlist(productId) {
        var btn = $('#btnWishlist_' + productId);
        var icon = $('#iconWishlist_' + productId);

        $.ajax({
            type: "POST",
            url: '@Url.Action("ToggleWishlist", "Wishlists")',
            data: { productId: productId },
            success: function (response) {
                if (response.success) {
                    if (response.isAdded) {
                        icon.removeClass('fa fa-heart').addClass('fa fa-heart text-danger');
                        toastr.success(response.message);
                    } else {
                        icon.removeClass('bi-calendar-heart-fill text-danger').addClass('bi-calendar-heart');
                        toastr.success(response.message);
                    }
                } else {
                    toastr.error(response.message);
                }
            },
            error: function () {
                toastr.error("An error occurred while toggling the product in the wishlist.");
            }
        });
    }
</script>




<style>
    .btn-wishlist-added {
        background-color: #ffc107 !important;
        color: #212529 !important;
    }
</style>
<div class="col-lg-9 col-md-12">
    <div class="row pb-3 post-card">
        @foreach (var product in ViewBag.Products as List<Product>)
        {
            <div class="product-card">
                <div class="card product-item border-0 mb-4">
                    <img class="productImage w-100" src="~/images/@product.Image" alt="@product.Name">

                    <div class="card-body border-left border-right text-center p-0 pt-4 pb-3">
                        <h6 class="text-truncate mb-3">@product.Name</h6>
                        <h6><p class="card-text"><strong>Price:</strong> <span id="price-@product.Id">@product.Price.ToString("C")</span></p></h6>
                        @if (product.ProductOptions != null && product.ProductOptions.Count > 0)
                        {
                            <ul class="list-unstyled">
                                @foreach (var option in product.ProductOptions)
                                {
                                    <li>
                                        <input type="radio" name="option-@product.Id" value="@option.OptionPrice" data-product-id="@product.Id" data-option-id="@option.Id" onchange="updatePrice(@product.Id, @option.OptionPrice)"> @option.OptionName: @option.OptionPrice.ToString("C")
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                    <div class="card-footer d-flex justify-content-between bg-light border">
                        <a href="@Url.Action("DetailsProducts", "Products", new { id = product.Id })" class="btn btn-sm text-dark p-0"><i class="fas fa-eye text-primary mr-1"></i>View Detail</a>

                        @{
                            var userWishlists = ViewBag.UserWishlists as List<Wishlist>;
                            bool isInWishlist = userWishlists != null && userWishlists.Any(w => w.ProductId == product.Id);
                            string iconClass = isInWishlist ? "fa fa-heart text-danger" : "fa fa-heart";
                        }

                        <button id="btnWishlist_@product.Id" class="btn btn-sm text-dark p-0 ml-2" onclick="toggleWishlist(@product.Id)">
                            <i id="iconWishlist_@product.Id" class="@iconClass"></i>
                        </button>

                        <button type="button" onclick="AddToCart(@product.Id)" class="btn btn-sm text-dark p-0 ml-2">Add to Cart</button>
                    </div>
                </div>
            </div>
        }

        <div class="col-12 pb-1">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center mb-3">
                    <li class="page-item disabled">
                        <a class="page-link" href="#" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                    <li class="page-item active"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>
<style>
    .post-card {
        border: 1px solid black;
        width: 900px;
        margin-top: 3rem;
        display: flex;
        gap: 2rem;
        padding: 20px;
        box-shadow:
    }

    .product-card {
        width: 16rem;
        height: 32rem;
        border-radius: 10px;
        overflow: hidden;
        cursor: pointer;
        box-shadow: 0 10px 30px 5px rgba(0, 0, 0, 0.2);
    }

    .productImage {
        object-fit: cover;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        opacity: 0.9;
        transition: opacity .2s ease-out;
    }

        .productImage:hover {
            transition: opacity .3s ease-in;
            opacity: 1;
        }
</style>